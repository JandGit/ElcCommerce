package com.android.tkengine.elccommerce.utils;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.graphics.drawable.ColorDrawable;import android.os.Handler;import android.os.Message;import android.support.v7.app.AppCompatActivity;import android.util.Log;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.WindowManager;import android.widget.EditText;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.PopupWindow;import android.widget.TextView;import android.widget.Toast;import com.android.tkengine.elccommerce.R;import com.android.tkengine.elccommerce.UI.PayActivity;import com.android.tkengine.elccommerce.beans.Constants;import com.android.tkengine.elccommerce.beans.GoodsBean;import com.android.tkengine.elccommerce.beans.GoodsDetailsBean;import com.android.tkengine.elccommerce.model.ElcModel;import com.android.tkengine.elccommerce.presenter.DisplayPresenter;import com.squareup.picasso.Picasso;import org.json.JSONObject;import java.util.Timer;import java.util.TimerTask;/** * Created by FangYu on 2016/8/11. */public class AddCartPopupWindow extends PopupWindow {    private static final String TAG = "AddCartPopupWindow" ;    private View mView;    public ImageView close, imageIcon;    TextView sub, add, sure, price;    View dismissView;    EditText number;    private static final int ADD_SUCCESS = 1;    private static final int ADD_UNSUCCESS = 2;    Handler handlerDelay = new Handler();    DisplayPresenter presenter = new DisplayPresenter();    public  AddCartPopupWindow (final AppCompatActivity context, View.OnClickListener itemsOnClick, int type){        super(context);        LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);        mView = inflater.inflate(R.layout.add_cart, null);        close = (ImageView) mView.findViewById(R.id.add_cart_close);        imageIcon = (ImageView) mView.findViewById(R.id.add_cart_icon);        price = (TextView) mView.findViewById(R.id.add_cart_price);        sub = (TextView) mView.findViewById(R.id.add_cart_sub);        add = (TextView) mView.findViewById(R.id.add_cart_add);        number = (EditText) mView.findViewById(R.id.add_cart_number);        number.setSelection(number.getText().length());        sure = (TextView) mView.findViewById(R.id.add_cart_sure);        dismissView = mView.findViewById(R.id.pop_dismiss);        dismissView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                dismiss();            }        });        if(presenter.mData != null){            if(presenter.mData.getPictures_url() != null){                Picasso.with(context).load(presenter.mData.getPictures_url().get(0).getTiny_picture_url()).fit().into(imageIcon);            }            price.setText(presenter.mData.getProduct_price() + "");        }        final Handler handler = new Handler(){            @Override            public void handleMessage(Message msg) {                switch (msg.what){                    case ADD_SUCCESS:                        final LinearLayout ll = (LinearLayout) context.findViewById(R.id.add_cart_true);                        ll.setVisibility(View.VISIBLE);                        handlerDelay.postDelayed(new Runnable() {                            @Override                            public void run() {                                ll.setVisibility(View.GONE);                            }                        },2000);                        break;                    case ADD_UNSUCCESS:                        final LinearLayout ll2 = (LinearLayout) context.findViewById(R.id.add_cart_false);                        ll2.setVisibility(View.VISIBLE);                        Timer timer2 = new Timer(); //每一个Timer对象对应的是一个线程                        TimerTask timerTask2 = new TimerTask() {                            @Override                            public void run() {                                ll2.setVisibility(View.GONE);                            }                        };                        //在3秒延迟后执行跳转页面                        timer2.schedule(timerTask2, 1000*2);                        break;                    default:                        break;                }}};        close.setOnClickListener(itemsOnClick);       this.setContentView(mView);        this.setWidth(WindowManager.LayoutParams.MATCH_PARENT);        this.setHeight(WindowManager.LayoutParams.WRAP_CONTENT);        this.setFocusable(true);        ColorDrawable dw = new ColorDrawable(0xb0000000);        this.setBackgroundDrawable(dw);        sub.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                int i = Integer.parseInt(number.getText().toString()) ;                if(i>1){                    number.setText((i - 1)+"");                }            }        });        add.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                int i = Integer.parseInt(number.getText().toString()) + 1;                number.setText(i+"");            }        });        switch (type){            case 1:                sure.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View view) {                        if (!isUserLogined(context)) {                            Toast.makeText(context, "添加失败，用户未登录", Toast.LENGTH_SHORT).show();                        } else {                            sentRequest();                        }                        dismiss();                    }                    private void sentRequest() {                        new Thread(new Runnable() {                            @Override                            public void run() {                                try{                                    SharedPreferences sp = context.getSharedPreferences(Constants.SP_LOGIN_USERINFO, Context.MODE_PRIVATE);                                    String userId = userId = sp.getString("UserId", null);                                    boolean result  = new ElcModel(context).addInCart(userId,context.getIntent().getStringExtra("productID"), number.getText().toString());                                    if(result == true){                                        Message message = new Message();                                        message.what = ADD_SUCCESS;                                        handler.sendMessage(message);                                    }else {                                        Message message = new Message();                                        message.what = ADD_UNSUCCESS;                                        handler.sendMessage(message);                                    }                                }catch (Exception e){                                    e.printStackTrace();                                }                            }                        }).start();                    }                });                break;            case 2:                sure.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View view) {                        if (!isUserLogined(context)) {                            Toast.makeText(context, "购买失败，用户未登录", Toast.LENGTH_SHORT).show();                        } else {                            turnPage();                        }                        dismiss();                    }                    private void turnPage(){                        Intent intent = new Intent(context, PayActivity.class);                        GoodsBean goodsBean = new GoodsBean();                        if(presenter.mData.getPictures_url() != null){                            goodsBean.setGoodsIcon(presenter.mData.getPictures_url().get(0).getTiny_picture_url());                        }                        goodsBean.setGoodsId(presenter.mData.getProduct_id());                        goodsBean.setGoodsName(presenter.mData.getProduct_name());                        goodsBean.setGoodsNum(Integer.parseInt(number.getText().toString()));                        goodsBean.setGoodsPrice(presenter.mData .getProduct_price());                        intent.putExtra("product",goodsBean);                        intent.putExtra("from",2);                        context.startActivity(intent);                    }                });                break;        }    }    //检查用户是否已经登录    private boolean isUserLogined(AppCompatActivity context) {        SharedPreferences sp = context.getSharedPreferences("LoginInfo", Context.MODE_PRIVATE);        return sp.getBoolean("isLogin", false);    }}