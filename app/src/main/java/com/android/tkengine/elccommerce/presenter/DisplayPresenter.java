package com.android.tkengine.elccommerce.presenter;import android.content.Context;import android.os.Handler;import android.os.Message;import android.support.v4.view.PagerAdapter;import android.support.v4.view.ViewPager;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.util.SparseArray;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.RatingBar;import android.widget.TextView;import com.android.tkengine.elccommerce.R;import com.android.tkengine.elccommerce.beans.GoodsDetailsBean;import com.android.tkengine.elccommerce.model.ElcModel;import com.android.tkengine.elccommerce.utils.CircleImageView;import com.android.tkengine.elccommerce.utils.Indicator;import com.squareup.picasso.Picasso;import java.util.ArrayList;import java.util.List;/** * Created by FangYu on 2016/8/11. */public class DisplayPresenter {    public void clickBack(final AppCompatActivity activity , View v){        v.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                switch (view.getId()){                    case R.id.title_back:                        activity.finish();                        break;                    case R.id.title_message:                        break;                }            }        });    }    public class DisplayAdapter extends RecyclerView.Adapter<DisplayAdapter.MyViewHolder>{        GoodsDetailsBean mData = new GoodsDetailsBean();        Context mContext;        LayoutInflater mInflater;        private static final int TYPE_ITEM1 = 1;        private static final int TYPE_ITEM2 = 2;        private static final int TYPE_ITEM3 = 3;        private static final int GET_SUCCESS = 4;        private static final String TAG = "http://192.168.1.101:8080/TKBaas/";        private Handler handler = new Handler(){            @Override            public void handleMessage(Message msg) {                switch (msg.what){                    case GET_SUCCESS:                        notifyDataSetChanged();                        break;                    default:                        break;                }}};        public DisplayAdapter( Context context) {            this.mContext = context;            mInflater = LayoutInflater.from(mContext);            initData();        }        private void initData() {            new Thread(new Runnable() {                @Override                public void run() {                    try{                        mData = new ElcModel(mContext).getGoodsDetails("40283e81566005b20156600987d80005");                        Log.d("sssss", "hi "+ mData.getPictures_url().size());                        Log.d("sssss", "ha "+ mData.getDetail_pictures_url().size());                        Message message = new Message();                        message.what = GET_SUCCESS;                        handler.sendMessage(message);                    }catch (Exception e){                        e.printStackTrace();                    }                }            }).start();        }        @Override        public int getItemViewType(int position) {            if(position == 0)                return TYPE_ITEM1;            else if (position == 1)                return TYPE_ITEM2;            else                return TYPE_ITEM3;        }        @Override        public MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {            MyViewHolder holder = null;            switch (viewType){                case TYPE_ITEM1:                    holder = new MyViewHolder(mInflater.inflate(R.layout.display_item1, parent, false));                    break;                case TYPE_ITEM2:                    holder = new MyViewHolder(mInflater.inflate(R.layout.display_item2, parent, false));                    break;                case TYPE_ITEM3:                    holder = new MyViewHolder(mInflater.inflate(R.layout.display_item3, parent, false));                    break;            }            return holder;        }        @Override        public void onBindViewHolder(MyViewHolder holder, int position) {            switch (holder.getItemViewType()){                case TYPE_ITEM1:                    ViewPager vp = (ViewPager) holder.getView(R.id.goods_pager);                    LinearLayout indicator = (LinearLayout) holder.getView(R.id.bottom_indicator);//                    final String img = mData.getPictures_url().get(position).getTiny_picture_url();                    vp.setAdapter(new PagerAdapter() {                        @Override                        public Object instantiateItem(ViewGroup container, int position) {                            ImageView iv = new ImageView(mContext);                            iv.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,                                    ViewGroup.LayoutParams.MATCH_PARENT));//                            Picasso.with(mContext).load(img).fit().into(iv);                            container.addView(iv);                            return iv;                        }                        @Override                        public void destroyItem(ViewGroup container, int position, Object object) {                            container.removeView((View)object);                        }                        @Override                        public int getCount() {                            return 5;                        }                        @Override                        public boolean isViewFromObject(View view, Object object) {                            return view == object;                        }                    });                    Indicator.setUpViewPager(vp, indicator,mContext, 5, 2);                    break;                case TYPE_ITEM2:                    TextView goodsName= (TextView) holder.getView(R.id.goods_name);                    TextView goodsPrice= (TextView) holder.getView(R.id.goods_price);                    TextView eNumber= (TextView) holder.getView(R.id.goods_evaluation_number);                    TextView eName= (TextView) holder.getView(R.id.goods_evaluation_name);                    TextView goodsSales= (TextView) holder.getView(R.id.goods_sales);                    TextView goodsArea= (TextView) holder.getView(R.id.goods_area);                    TextView eContent= (TextView) holder.getView(R.id.goods_evaluation_content);                    TextView storeName= (TextView) holder.getView(R.id.goods_store_name);                    TextView goodsMessage= (TextView) holder.getView(R.id.goods_message);                    TextView eTime= (TextView) holder.getView(R.id.goods_evaluation_time);                    CircleImageView eIcon = (CircleImageView) holder.getView(R.id.goods_evaluation_icon);                    ImageView storeIcon = (ImageView) holder.getView(R.id.goods_store_icon);                    RatingBar goodsGrade = (RatingBar) holder.getView(R.id.goods_grade);                    RatingBar storeGrade = (RatingBar) holder.getView(R.id.goods_store_grade);                    goodsName.setText(mData.getProduct_name());                    goodsPrice.setText(mData.getProduct_price()+"");//                    eNumber.setText(mData.getProduct_comment().getDate());                    eName.setText(mData.getProduct_comment().getUsername());                    goodsSales.setText("月销"+mData.getProduct_sales()+"笔");                    goodsArea.setText(mData.getProduct_city());                    eContent.setText(mData.getProduct_comment().getComment());                    storeName.setText(mData.getProduct_seller().getShopName());                    goodsMessage.setText(mData.getProduct_description());                    eTime.setText(mData.getProduct_comment().getDate());                    goodsGrade.setProgress(Integer.parseInt(mData.getProduct_comment().getGrade()));                    storeGrade.setProgress(mData.getProduct_seller().getGrade());                    Picasso.with(mContext).load(TAG+mData.getProduct_comment().getUserPicture()).fit().into(eIcon);                    Picasso.with(mContext).load(TAG+mData.getProduct_seller().getShopPicture()).fit().into(storeIcon);                    break;                case TYPE_ITEM3://                    String content = mData.getPictures_url().get(position).getPicture_url();//                    ImageView imageView = (ImageView) holder.getView(R.id.goods_content_image);//                    Picasso.with(mContext).load(TAG + content).fit().into(imageView);                    break;            }        }        @Override        public int getItemCount() {            return 10;        }        public class MyViewHolder extends RecyclerView.ViewHolder{            SparseArray<View> allViews = new SparseArray<>();            View convertView;            public MyViewHolder(View itemView) {                super(itemView);                convertView = itemView;            }            //获得id对应的view            public View getView(int id){                View view = allViews.get(id);                if(null == view){                    view = convertView.findViewById(id);                    allViews.put(id, view);                }                return view;            }        }    }}